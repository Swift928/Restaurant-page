/*! For license information please see main.js.LICENSE.txt */
(()=>{var t={212:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var i=n(537),s=n.n(i),o=n(645),r=n.n(o)()(s());r.push([t.id,"/*! Flickity v3.0.0\nhttps://flickity.metafizzy.co\n---------------------------------------------- */\n\n.flickity-enabled {\n  position: relative;\n}\n\n.flickity-enabled:focus { outline: none; }\n\n.flickity-viewport {\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  touch-action: pan-y;\n}\n\n.flickity-slider {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n}\n\n.flickity-rtl .flickity-slider {\n  left: unset;\n  right: 0;\n}\n\n/* draggable */\n\n.flickity-enabled.is-draggable {\n  -webkit-tap-highlight-color: transparent;\n  user-select: none;\n}\n\n.flickity-enabled.is-draggable .flickity-viewport {\n  cursor: move;\n  cursor: grab;\n}\n\n.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {\n  cursor: grabbing;\n}\n\n/* ---- flickity-cell ---- */\n\n.flickity-cell {\n  position: absolute;\n  left: 0;\n}\n\n.flickity-rtl .flickity-cell {\n  left: unset;\n  right: 0;\n}\n\n/* ---- flickity-button ---- */\n\n.flickity-button {\n  position: absolute;\n  background: hsl(0 0% 100% / 75%);\n  border: none;\n  color: #333;\n}\n\n.flickity-button:hover {\n  background: white;\n  cursor: pointer;\n}\n\n.flickity-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 5px #19F;\n}\n\n.flickity-button:active {\n  opacity: 0.6;\n}\n\n.flickity-button:disabled {\n  opacity: 0.3;\n  cursor: auto;\n  /* prevent disabled button from capturing pointer up event. #716 */\n  pointer-events: none;\n}\n\n.flickity-button-icon {\n  fill: currentColor;\n}\n\n/* ---- previous/next buttons ---- */\n\n.flickity-prev-next-button {\n  top: 50%;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  /* vertically center */\n  transform: translateY(-50%);\n}\n\n.flickity-prev-next-button.previous { left: 10px; }\n.flickity-prev-next-button.next { right: 10px; }\n/* right to left */\n.flickity-rtl .flickity-prev-next-button.previous {\n  left: auto;\n  right: 10px;\n}\n\n.flickity-rtl .flickity-prev-next-button.next {\n  right: auto;\n  left: 10px;\n}\n\n.flickity-prev-next-button .flickity-button-icon {\n  position: absolute;\n  left: 20%;\n  top: 20%;\n  width: 60%;\n  height: 60%;\n}\n\n/* ---- page dots ---- */\n\n.flickity-page-dots {\n  position: absolute;\n  width: 100%;\n  bottom: -25px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.flickity-rtl .flickity-page-dots { direction: rtl; }\n\n.flickity-page-dot {\n  display: block;\n  width: 10px;\n  height: 10px;\n  padding: 0;\n  margin: 0 8px;\n  background: hsl(0 0% 20% / 25%);\n  border-radius: 50%;\n  cursor: pointer;\n  appearance: none;\n  border: none;\n  text-indent: -9999px;\n  overflow: hidden;\n}\n\n.flickity-rtl .flickity-page-dot {\n  text-indent: 9999px;\n}\n\n.flickity-page-dot:focus {\n  outline: none;\n  box-shadow: 0 0 0 5px #19F;\n}\n\n.flickity-page-dot.is-selected {\n  background: hsl(0 0% 20% / 100%);\n}\n","",{version:3,sources:["webpack://./node_modules/flickity/css/flickity.css"],names:[],mappings:"AAAA;;gDAEgD;;AAEhD;EACE,kBAAkB;AACpB;;AAEA,0BAA0B,aAAa,EAAE;;AAEzC;EACE,gBAAgB;EAChB,kBAAkB;EAClB,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,OAAO;AACT;;AAEA;EACE,WAAW;EACX,QAAQ;AACV;;AAEA,cAAc;;AAEd;EACE,wCAAwC;EACxC,iBAAiB;AACnB;;AAEA;EACE,YAAY;EACZ,YAAY;AACd;;AAEA;EACE,gBAAgB;AAClB;;AAEA,4BAA4B;;AAE5B;EACE,kBAAkB;EAClB,OAAO;AACT;;AAEA;EACE,WAAW;EACX,QAAQ;AACV;;AAEA,8BAA8B;;AAE9B;EACE,kBAAkB;EAClB,gCAAgC;EAChC,YAAY;EACZ,WAAW;AACb;;AAEA;EACE,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,YAAY;EACZ,YAAY;EACZ,kEAAkE;EAClE,oBAAoB;AACtB;;AAEA;EACE,kBAAkB;AACpB;;AAEA,oCAAoC;;AAEpC;EACE,QAAQ;EACR,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,sBAAsB;EACtB,2BAA2B;AAC7B;;AAEA,sCAAsC,UAAU,EAAE;AAClD,kCAAkC,WAAW,EAAE;AAC/C,kBAAkB;AAClB;EACE,UAAU;EACV,WAAW;AACb;;AAEA;EACE,WAAW;EACX,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,SAAS;EACT,QAAQ;EACR,UAAU;EACV,WAAW;AACb;;AAEA,wBAAwB;;AAExB;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,kBAAkB;EAClB,aAAa;EACb,uBAAuB;EACvB,eAAe;AACjB;;AAEA,oCAAoC,cAAc,EAAE;;AAEpD;EACE,cAAc;EACd,WAAW;EACX,YAAY;EACZ,UAAU;EACV,aAAa;EACb,+BAA+B;EAC/B,kBAAkB;EAClB,eAAe;EACf,gBAAgB;EAChB,YAAY;EACZ,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;EACE,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,0BAA0B;AAC5B;;AAEA;EACE,gCAAgC;AAClC",sourcesContent:["/*! Flickity v3.0.0\nhttps://flickity.metafizzy.co\n---------------------------------------------- */\n\n.flickity-enabled {\n  position: relative;\n}\n\n.flickity-enabled:focus { outline: none; }\n\n.flickity-viewport {\n  overflow: hidden;\n  position: relative;\n  height: 100%;\n  touch-action: pan-y;\n}\n\n.flickity-slider {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  left: 0;\n}\n\n.flickity-rtl .flickity-slider {\n  left: unset;\n  right: 0;\n}\n\n/* draggable */\n\n.flickity-enabled.is-draggable {\n  -webkit-tap-highlight-color: transparent;\n  user-select: none;\n}\n\n.flickity-enabled.is-draggable .flickity-viewport {\n  cursor: move;\n  cursor: grab;\n}\n\n.flickity-enabled.is-draggable .flickity-viewport.is-pointer-down {\n  cursor: grabbing;\n}\n\n/* ---- flickity-cell ---- */\n\n.flickity-cell {\n  position: absolute;\n  left: 0;\n}\n\n.flickity-rtl .flickity-cell {\n  left: unset;\n  right: 0;\n}\n\n/* ---- flickity-button ---- */\n\n.flickity-button {\n  position: absolute;\n  background: hsl(0 0% 100% / 75%);\n  border: none;\n  color: #333;\n}\n\n.flickity-button:hover {\n  background: white;\n  cursor: pointer;\n}\n\n.flickity-button:focus {\n  outline: none;\n  box-shadow: 0 0 0 5px #19F;\n}\n\n.flickity-button:active {\n  opacity: 0.6;\n}\n\n.flickity-button:disabled {\n  opacity: 0.3;\n  cursor: auto;\n  /* prevent disabled button from capturing pointer up event. #716 */\n  pointer-events: none;\n}\n\n.flickity-button-icon {\n  fill: currentColor;\n}\n\n/* ---- previous/next buttons ---- */\n\n.flickity-prev-next-button {\n  top: 50%;\n  width: 44px;\n  height: 44px;\n  border-radius: 50%;\n  /* vertically center */\n  transform: translateY(-50%);\n}\n\n.flickity-prev-next-button.previous { left: 10px; }\n.flickity-prev-next-button.next { right: 10px; }\n/* right to left */\n.flickity-rtl .flickity-prev-next-button.previous {\n  left: auto;\n  right: 10px;\n}\n\n.flickity-rtl .flickity-prev-next-button.next {\n  right: auto;\n  left: 10px;\n}\n\n.flickity-prev-next-button .flickity-button-icon {\n  position: absolute;\n  left: 20%;\n  top: 20%;\n  width: 60%;\n  height: 60%;\n}\n\n/* ---- page dots ---- */\n\n.flickity-page-dots {\n  position: absolute;\n  width: 100%;\n  bottom: -25px;\n  text-align: center;\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n}\n\n.flickity-rtl .flickity-page-dots { direction: rtl; }\n\n.flickity-page-dot {\n  display: block;\n  width: 10px;\n  height: 10px;\n  padding: 0;\n  margin: 0 8px;\n  background: hsl(0 0% 20% / 25%);\n  border-radius: 50%;\n  cursor: pointer;\n  appearance: none;\n  border: none;\n  text-indent: -9999px;\n  overflow: hidden;\n}\n\n.flickity-rtl .flickity-page-dot {\n  text-indent: 9999px;\n}\n\n.flickity-page-dot:focus {\n  outline: none;\n  box-shadow: 0 0 0 5px #19F;\n}\n\n.flickity-page-dot.is-selected {\n  background: hsl(0 0% 20% / 100%);\n}\n"],sourceRoot:""}]);const a=r},426:(t,e,n)=>{"use strict";n.d(e,{Z:()=>a});var i=n(537),s=n.n(i),o=n(645),r=n.n(o)()(s());r.push([t.id,":root{\n    --name-color: #ff0000f1;\n    --secondary-name-color: Firebrick;\n    --about-text-color: #F5A623;\n}\n\n*,\nhtml,\nbody{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Neue Helvetica\", helvetica, sans-serif;\n    overscroll-behavior-y: none;   \n}\n\n.header {\n    height: calc(96px + 25px);\n    background-color: black;\n    display: flex;\n    padding: 12px 30px 12px 30px;\n    z-index: 1000;\n    border-bottom: 1px solid var(--secondary-name-color);\n}\n\n#navLogo{\n    height: 80%;\n    align-self: center;\n}\n\n.infoButtons{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    padding: 6px 0 6px 15px;\n    margin-left: 30px;\n    border-left: 1px solid var(--name-color);\n}\n\n.restaurantName,\n.menuName{\n    display: inline-block;\n    text-wrap: nowrap;\n    font-size: 30px;\n    color: var(--name-color);\n    line-height: 1em;\n    letter-spacing: 3px;\n    font-style: normal;\n    text-transform: uppercase;\n    font-weight: 200;\n}\n\n.restaurantName{\n    margin-bottom: 25px;\n}\n\n.nav-menu{\n    display: flex;\n    font-size: 35px;\n    gap: 30px;\n    list-style: none;\n    font-size: 18px;\n}\n\n.nav-menu li > a,\n[data-menu-button] {\n    color: var(--secondary-name-color);\n    text-decoration: none;\n    font-size: 18px;\n    letter-spacing: 0.5px;\n    font-weight: 600;\n    text-transform: uppercase;\n    cursor: pointer;\n}\n\n.infoButtons :has(li:hover) li:not(:hover),\n.tab :has(button:hover) button:not(:hover) {\n    opacity: .7 ;\n    scale: .9;\n}\n\n.nav-menu a:hover, [data-menu-button]:hover{\n    text-decoration: underline;\n    text-underline-offset: .2rem;\n}\n\n[data-menu-button],\nli{\n    transition: scale 350ms ease, opacity 350ms ease;\n}\n\n\n.main-content{\n    position: relative;\n    height: calc(100vh - 191px);\n}\n\n.homeImage{\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n}\n\n.imageCarousel{\n    display: none;\n    margin: 0 auto;\n    height: calc(100% - 57px);\n}\n\n.imageCarousel *:not(.dishImage, .itemDescription) {\n    height: 100% !important;\n}\n\n[data-active-carousel]{\n    display: block\n}\n\n[data-active-tab=false]{\n    display: none !important;\n}\n\n[data-active-nav-button = true]{\n    text-decoration: underline !important;\n    color: blue;\n}\n\n.main-content::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6); \n}\n\n.greetingHeader,\n.greetingContent {\n    color: var(--secondary-name-color);\n    font-size: 24px;\n    font-weight: 600;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    letter-spacing: 0.5px;\n    line-height: 35px;\n    font-style: normal;\n    text-align: center;\n}\n\n.greetingHeader{\n    color: var(--name-color);\n    line-height: 42px;\n    font-size: 42px;\n    text-align: center;\n    margin-bottom: 40px;\n    font-weight: 400;\n}\n\n.centerContainer{\n    background-color: rgba(0, 0, 0, 0.75);\n    position: absolute;\n    z-index: 6;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    height: 65%;\n    width: 70vw;\n    padding: 20px 40px;\n    border-radius: 2%;\n    box-shadow: \n    0 0 10px rgba(255, 0, 0, 0.2),\n    0 0 10px rgba(255, 0, 0, 0.45);\n    overflow-y: auto;\n    overflow-x: hidden;\n    transition: all 0.5s ease-in-out;\n}\n\n.restaurantNameAbout{\n    color: var(--name-color);\n}\n\n.carouselItem {\n    padding: 0 20px;\n    object-fit: cover;\n    object-position: center;\n    transition: 200ms opacity ease-in-out;\n    transition-delay: 200ms;\n}\n\n.dishImage{\n    object-fit: cover;\n    object-position: center;\n    height: calc(100% - 24px);\n}\n\n.drinksCarousel .dishImage{\n    aspect-ratio: 1/1;\n}\n\n.flickity-viewport {\n    overflow: visible !important;\n}\n\n.flickity-cell {\n    transition: opacity 0.7s ease-in-out;\n    opacity: .3;\n}\n\n.menuHandler{\n    height: 100%;\n}\n  \n.flickity-cell.is-selected {\n    transition: opacity 0.5s ease-in-out;\n    opacity: 1;\n}\n\n.itemDescription{\n    text-align: center;\n    color: var(--secondary-name-color);\n    font-size: 24px;\n    letter-spacing: 0.5px;\n    font-weight: 500;\n    font-family: math;\n}\n\n.menuButtonContainer {\n    display: flex;\n    justify-content: center;\n    gap: 40px;\n}\n\n[data-menu-button] {\n    background-color: transparent;\n    border: none;\n    font-size: 16px;\n    margin-bottom: 10px;\n    cursor: pointer;\n}\n\n.menuName{\n    display: block;\n    text-align: center;\n    margin-bottom: 5px;\n    font-weight: 500;\n}\n  \n.creatorContainer{\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.leftButton,\n.rightButton {\n  position: absolute;\n  font-size: 40px;\n  font-weight: 100;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: transparent;\n  color: white;\n  border: none;\n  cursor: pointer;\n  z-index: 300;\n}\n\n.leftButton {\n    left: 20%;\n}\n  \n.rightButton {\n    right: 20%;\n}\n\n.githubSVG{\n    height: 15px;\n    border-radius: 50%;\n    background-color: antiquewhite;\n}\n\n.footer{\n    height: 70px;\n    font-size: 15px;\n    font-weight: 100;\n    background-color: black;\n    display: flex;\n    color: antiquewhite;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 30px;\n}\n\n.contactHandler {\n    padding: 20px;\n    overflow: hidden;\n    font-family: Arial, sans-serif;\n}\n\n.contactTitle {\n    display: grid;\n    margin-bottom: 20px;\n    font-size: 36px;\n    font-weight: 500;\n    color: var(--name-color);\n}\n\n.contactInfo {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 10px 20px;\n    margin-bottom: 20px;\n}\n\n.contactInfo strong {\n    font-size: 18px;\n    font-weight: bold;\n}\n\n.contactInfo :is(strong, p){\n    font-size: 16px;\n    line-height: 1.25;\n    color: var(--about-text-color);\n}\n\n.aboutDescription {\n    color: #F5A623; \n    font-size: 18px;\n    line-height: 1.6;\n    text-align: justify;\n    padding: 20px;\n}\n  \n.aboutHandler {\n    overflow: hidden;\n    display: grid;\n    grid-template-columns: 1fr;\n}\n\n.creditsHandler,\n.aboutHandler{\n    padding: 20px;\n}\n  \n.aboutTitle {\n    font-size: 28px;\n    text-align: center;\n    margin-bottom: 20px;\n    color: #F5A623; \n}\n\n.creatorName{\n    color: var(--about-text-color);\n    margin-bottom: .15rem;\n    font-size: 18px;\n}\n\n.credit{\n    margin-bottom: 20px;\n}\n\n.sourceWebsite *, .sourceWebsite {\n    color: var(--secondary-name-color);\n    margin-left: 1rem;\n}\n\n.sourceWebsite a:hover{\n    color: blue;\n}\n\n.menuSvg{\n    display: none;\n}\n\n@media screen and (max-width: 768px){\n    .header{\n        position: relative;\n        height: 70px;\n        padding: 5px 10px;\n    }\n\n    .infoButtons{\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        margin-left: 10px;\n    }\n\n    .main-content{\n        height: calc(100vh - 120px);\n    }\n\n    .nav-menu{\n        display: flex;\n        margin-top: 1px;\n        background-color: rgb(0,0,0, 1);\n        position: absolute;\n        top: 100%;\n        left: 0;\n        right: 0;\n        gap: 20px;\n        z-index: 50;\n        flex-direction: column;\n        align-items: center;\n        max-height: 1px;\n        overflow: hidden;\n    }\n\n    .nav-menu.active{\n        padding: 20px 0;\n        transition: all 0.5s ease;\n        max-height: 1000px;\n    }\n\n    .aboutTitle{\n        margin-bottom: 10px;\n    }\n\n    .sourceWebsite{\n        display: flex;\n        flex-direction: column;\n        margin-left: 10px;\n    }\n\n    .sourceWebsite a{\n        margin-left: 0;\n    }\n\n    .centerContainer{\n        width: 85% !important;\n        height: 60vh !important;\n        padding: 20px 10px;\n    }\n    \n    .contactTitle{\n        text-align: center;\n    }\n\n    .restaurantName {\n        margin-bottom: 0;\n        font-size: 1.6rem;\n    }\n\n    .menuSvg{\n        display: block;\n        fill: var(--secondary-name-color);\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n    }\n\n    .creditsHandler,\n    .aboutHandler,\n    .contactHandler{\n        padding: 0;\n        text-wrap: wrap;\n    }\n\n    .creditsHandler{\n        overflow-wrap: break-word;\n    }\n\n    .rightButton{\n        right: 7%;\n    }\n\n    .leftButton{\n        left: 7%;\n    }\n\n    .contactInfo{\n        grid-template-columns: none;\n    }\n\n    .contactInfo p{\n        color: var(--secondary-name-color);\n        margin-left: 10px;\n    }\n\n    .footer{\n        height: 50px;\n        font-size: 10px;\n        padding: 5px 15px;\n    }\n\n    .footer #navLogo{\n        display: none;\n    }\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:[":root{\n    --name-color: #ff0000f1;\n    --secondary-name-color: Firebrick;\n    --about-text-color: #F5A623;\n}\n\n*,\nhtml,\nbody{\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n    font-family: \"Neue Helvetica\", helvetica, sans-serif;\n    overscroll-behavior-y: none;   \n}\n\n.header {\n    height: calc(96px + 25px);\n    background-color: black;\n    display: flex;\n    padding: 12px 30px 12px 30px;\n    z-index: 1000;\n    border-bottom: 1px solid var(--secondary-name-color);\n}\n\n#navLogo{\n    height: 80%;\n    align-self: center;\n}\n\n.infoButtons{\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    width: 100%;\n    padding: 6px 0 6px 15px;\n    margin-left: 30px;\n    border-left: 1px solid var(--name-color);\n}\n\n.restaurantName,\n.menuName{\n    display: inline-block;\n    text-wrap: nowrap;\n    font-size: 30px;\n    color: var(--name-color);\n    line-height: 1em;\n    letter-spacing: 3px;\n    font-style: normal;\n    text-transform: uppercase;\n    font-weight: 200;\n}\n\n.restaurantName{\n    margin-bottom: 25px;\n}\n\n.nav-menu{\n    display: flex;\n    font-size: 35px;\n    gap: 30px;\n    list-style: none;\n    font-size: 18px;\n}\n\n.nav-menu li > a,\n[data-menu-button] {\n    color: var(--secondary-name-color);\n    text-decoration: none;\n    font-size: 18px;\n    letter-spacing: 0.5px;\n    font-weight: 600;\n    text-transform: uppercase;\n    cursor: pointer;\n}\n\n.infoButtons :has(li:hover) li:not(:hover),\n.tab :has(button:hover) button:not(:hover) {\n    opacity: .7 ;\n    scale: .9;\n}\n\n.nav-menu a:hover, [data-menu-button]:hover{\n    text-decoration: underline;\n    text-underline-offset: .2rem;\n}\n\n[data-menu-button],\nli{\n    transition: scale 350ms ease, opacity 350ms ease;\n}\n\n\n.main-content{\n    position: relative;\n    height: calc(100vh - 191px);\n}\n\n.homeImage{\n    height: 100%;\n    width: 100%;\n    object-fit: cover;\n}\n\n.imageCarousel{\n    display: none;\n    margin: 0 auto;\n    height: calc(100% - 57px);\n}\n\n.imageCarousel *:not(.dishImage, .itemDescription) {\n    height: 100% !important;\n}\n\n[data-active-carousel]{\n    display: block\n}\n\n[data-active-tab=false]{\n    display: none !important;\n}\n\n[data-active-nav-button = true]{\n    text-decoration: underline !important;\n    color: blue;\n}\n\n.main-content::after {\n    content: \"\";\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.6); \n}\n\n.greetingHeader,\n.greetingContent {\n    color: var(--secondary-name-color);\n    font-size: 24px;\n    font-weight: 600;\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    letter-spacing: 0.5px;\n    line-height: 35px;\n    font-style: normal;\n    text-align: center;\n}\n\n.greetingHeader{\n    color: var(--name-color);\n    line-height: 42px;\n    font-size: 42px;\n    text-align: center;\n    margin-bottom: 40px;\n    font-weight: 400;\n}\n\n.centerContainer{\n    background-color: rgba(0, 0, 0, 0.75);\n    position: absolute;\n    z-index: 6;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    height: 65%;\n    width: 70vw;\n    padding: 20px 40px;\n    border-radius: 2%;\n    box-shadow: \n    0 0 10px rgba(255, 0, 0, 0.2),\n    0 0 10px rgba(255, 0, 0, 0.45);\n    overflow-y: auto;\n    overflow-x: hidden;\n    transition: all 0.5s ease-in-out;\n}\n\n.restaurantNameAbout{\n    color: var(--name-color);\n}\n\n.carouselItem {\n    padding: 0 20px;\n    object-fit: cover;\n    object-position: center;\n    transition: 200ms opacity ease-in-out;\n    transition-delay: 200ms;\n}\n\n.dishImage{\n    object-fit: cover;\n    object-position: center;\n    height: calc(100% - 24px);\n}\n\n.drinksCarousel .dishImage{\n    aspect-ratio: 1/1;\n}\n\n.flickity-viewport {\n    overflow: visible !important;\n}\n\n.flickity-cell {\n    transition: opacity 0.7s ease-in-out;\n    opacity: .3;\n}\n\n.menuHandler{\n    height: 100%;\n}\n  \n.flickity-cell.is-selected {\n    transition: opacity 0.5s ease-in-out;\n    opacity: 1;\n}\n\n.itemDescription{\n    text-align: center;\n    color: var(--secondary-name-color);\n    font-size: 24px;\n    letter-spacing: 0.5px;\n    font-weight: 500;\n    font-family: math;\n}\n\n.menuButtonContainer {\n    display: flex;\n    justify-content: center;\n    gap: 40px;\n}\n\n[data-menu-button] {\n    background-color: transparent;\n    border: none;\n    font-size: 16px;\n    margin-bottom: 10px;\n    cursor: pointer;\n}\n\n.menuName{\n    display: block;\n    text-align: center;\n    margin-bottom: 5px;\n    font-weight: 500;\n}\n  \n.creatorContainer{\n    display: flex;\n    align-items: center;\n    gap: 5px;\n}\n\n.leftButton,\n.rightButton {\n  position: absolute;\n  font-size: 40px;\n  font-weight: 100;\n  top: 50%;\n  transform: translateY(-50%);\n  background-color: transparent;\n  color: white;\n  border: none;\n  cursor: pointer;\n  z-index: 300;\n}\n\n.leftButton {\n    left: 20%;\n}\n  \n.rightButton {\n    right: 20%;\n}\n\n.githubSVG{\n    height: 15px;\n    border-radius: 50%;\n    background-color: antiquewhite;\n}\n\n.footer{\n    height: 70px;\n    font-size: 15px;\n    font-weight: 100;\n    background-color: black;\n    display: flex;\n    color: antiquewhite;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0 30px;\n}\n\n.contactHandler {\n    padding: 20px;\n    overflow: hidden;\n    font-family: Arial, sans-serif;\n}\n\n.contactTitle {\n    display: grid;\n    margin-bottom: 20px;\n    font-size: 36px;\n    font-weight: 500;\n    color: var(--name-color);\n}\n\n.contactInfo {\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 10px 20px;\n    margin-bottom: 20px;\n}\n\n.contactInfo strong {\n    font-size: 18px;\n    font-weight: bold;\n}\n\n.contactInfo :is(strong, p){\n    font-size: 16px;\n    line-height: 1.25;\n    color: var(--about-text-color);\n}\n\n.aboutDescription {\n    color: #F5A623; \n    font-size: 18px;\n    line-height: 1.6;\n    text-align: justify;\n    padding: 20px;\n}\n  \n.aboutHandler {\n    overflow: hidden;\n    display: grid;\n    grid-template-columns: 1fr;\n}\n\n.creditsHandler,\n.aboutHandler{\n    padding: 20px;\n}\n  \n.aboutTitle {\n    font-size: 28px;\n    text-align: center;\n    margin-bottom: 20px;\n    color: #F5A623; \n}\n\n.creatorName{\n    color: var(--about-text-color);\n    margin-bottom: .15rem;\n    font-size: 18px;\n}\n\n.credit{\n    margin-bottom: 20px;\n}\n\n.sourceWebsite *, .sourceWebsite {\n    color: var(--secondary-name-color);\n    margin-left: 1rem;\n}\n\n.sourceWebsite a:hover{\n    color: blue;\n}\n\n.menuSvg{\n    display: none;\n}\n\n@media screen and (max-width: 768px){\n    .header{\n        position: relative;\n        height: 70px;\n        padding: 5px 10px;\n    }\n\n    .infoButtons{\n        flex-direction: row;\n        align-items: center;\n        justify-content: space-between;\n        margin-left: 10px;\n    }\n\n    .main-content{\n        height: calc(100vh - 120px);\n    }\n\n    .nav-menu{\n        display: flex;\n        margin-top: 1px;\n        background-color: rgb(0,0,0, 1);\n        position: absolute;\n        top: 100%;\n        left: 0;\n        right: 0;\n        gap: 20px;\n        z-index: 50;\n        flex-direction: column;\n        align-items: center;\n        max-height: 1px;\n        overflow: hidden;\n    }\n\n    .nav-menu.active{\n        padding: 20px 0;\n        transition: all 0.5s ease;\n        max-height: 1000px;\n    }\n\n    .aboutTitle{\n        margin-bottom: 10px;\n    }\n\n    .sourceWebsite{\n        display: flex;\n        flex-direction: column;\n        margin-left: 10px;\n    }\n\n    .sourceWebsite a{\n        margin-left: 0;\n    }\n\n    .centerContainer{\n        width: 85% !important;\n        height: 60vh !important;\n        padding: 20px 10px;\n    }\n    \n    .contactTitle{\n        text-align: center;\n    }\n\n    .restaurantName {\n        margin-bottom: 0;\n        font-size: 1.6rem;\n    }\n\n    .menuSvg{\n        display: block;\n        fill: var(--secondary-name-color);\n        height: 100%;\n        width: auto;\n        cursor: pointer;\n    }\n\n    .creditsHandler,\n    .aboutHandler,\n    .contactHandler{\n        padding: 0;\n        text-wrap: wrap;\n    }\n\n    .creditsHandler{\n        overflow-wrap: break-word;\n    }\n\n    .rightButton{\n        right: 7%;\n    }\n\n    .leftButton{\n        left: 7%;\n    }\n\n    .contactInfo{\n        grid-template-columns: none;\n    }\n\n    .contactInfo p{\n        color: var(--secondary-name-color);\n        margin-left: 10px;\n    }\n\n    .footer{\n        height: 50px;\n        font-size: 10px;\n        padding: 5px 15px;\n    }\n\n    .footer #navLogo{\n        display: none;\n    }\n}"],sourceRoot:""}]);const a=r},645:t=>{"use strict";t.exports=function(t){var e=[];return e.toString=function(){return this.map((function(e){var n="",i=void 0!==e[5];return e[4]&&(n+="@supports (".concat(e[4],") {")),e[2]&&(n+="@media ".concat(e[2]," {")),i&&(n+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),n+=t(e),i&&(n+="}"),e[2]&&(n+="}"),e[4]&&(n+="}"),n})).join("")},e.i=function(t,n,i,s,o){"string"==typeof t&&(t=[[null,t,void 0]]);var r={};if(i)for(var a=0;a<this.length;a++){var l=this[a][0];null!=l&&(r[l]=!0)}for(var c=0;c<t.length;c++){var d=[].concat(t[c]);i&&r[d[0]]||(void 0!==o&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=o),n&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=n):d[2]=n),s&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=s):d[4]="".concat(s)),e.push(d))}},e}},537:t=>{"use strict";t.exports=function(t){var e=t[1],n=t[3];if(!n)return e;if("function"==typeof btoa){var i=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(i),o="/*# ".concat(s," */");return[e].concat([o]).join("\n")}return[e].join("\n")}},158:function(t){var e,n;e="undefined"!=typeof window?window:this,n=function(){function t(){}let e=t.prototype;return e.on=function(t,e){if(!t||!e)return this;let n=this._events=this._events||{},i=n[t]=n[t]||[];return i.includes(e)||i.push(e),this},e.once=function(t,e){if(!t||!e)return this;this.on(t,e);let n=this._onceEvents=this._onceEvents||{};return(n[t]=n[t]||{})[e]=!0,this},e.off=function(t,e){let n=this._events&&this._events[t];if(!n||!n.length)return this;let i=n.indexOf(e);return-1!=i&&n.splice(i,1),this},e.emitEvent=function(t,e){let n=this._events&&this._events[t];if(!n||!n.length)return this;n=n.slice(0),e=e||[];let i=this._onceEvents&&this._onceEvents[t];for(let s of n)i&&i[s]&&(this.off(t,s),delete i[s]),s.apply(this,e);return this},e.allOff=function(){return delete this._events,delete this._onceEvents,this},t},t.exports?t.exports=n():e.EvEmitter=n()},47:function(t){var e,n;e=this,n=function(t){let e={extend:function(t,e){return Object.assign(t,e)},modulo:function(t,e){return(t%e+e)%e},makeArray:function(t){return Array.isArray(t)?t:null==t?[]:"object"==typeof t&&"number"==typeof t.length?[...t]:[t]},removeFrom:function(t,e){let n=t.indexOf(e);-1!=n&&t.splice(n,1)},getParent:function(t,e){for(;t.parentNode&&t!=document.body;)if((t=t.parentNode).matches(e))return t},getQueryElement:function(t){return"string"==typeof t?document.querySelector(t):t},handleEvent:function(t){let e="on"+t.type;this[e]&&this[e](t)},filterFindElements:function(t,n){return(t=e.makeArray(t)).filter((t=>t instanceof HTMLElement)).reduce(((t,e)=>{if(!n)return t.push(e),t;e.matches(n)&&t.push(e);let i=e.querySelectorAll(n);return t.concat(...i)}),[])},debounceMethod:function(t,e,n){n=n||100;let i=t.prototype[e],s=e+"Timeout";t.prototype[e]=function(){clearTimeout(this[s]);let t=arguments;this[s]=setTimeout((()=>{i.apply(this,t),delete this[s]}),n)}},docReady:function(t){let e=document.readyState;"complete"==e||"interactive"==e?setTimeout(t):document.addEventListener("DOMContentLoaded",t)},toDashed:function(t){return t.replace(/(.)([A-Z])/g,(function(t,e,n){return e+"-"+n})).toLowerCase()}},n=t.console;return e.htmlInit=function(i,s){e.docReady((function(){let o="data-"+e.toDashed(s),r=document.querySelectorAll(`[${o}]`),a=t.jQuery;[...r].forEach((t=>{let e,r=t.getAttribute(o);try{e=r&&JSON.parse(r)}catch(e){return void(n&&n.error(`Error parsing ${o} on ${t.className}: ${e}`))}let l=new i(t,e);a&&a.data(t,s,l)}))}))},e},t.exports?t.exports=n(e):e.fizzyUIUtils=n(e)},597:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(680),n(47)):i(e.Flickity,e.fizzyUIUtils)}("undefined"!=typeof window?window:this,(function(t,e){let n=t.prototype;return n.insert=function(t,e){let n=this._makeCells(t);if(!n||!n.length)return;let i=this.cells.length;e=void 0===e?i:e;let s=function(t){let e=document.createDocumentFragment();return t.forEach((t=>e.appendChild(t.element))),e}(n),o=e===i;if(o)this.slider.appendChild(s);else{let t=this.cells[e].element;this.slider.insertBefore(s,t)}if(0===e)this.cells=n.concat(this.cells);else if(o)this.cells=this.cells.concat(n);else{let t=this.cells.splice(e,i-e);this.cells=this.cells.concat(n).concat(t)}this._sizeCells(n),this.cellChange(e),this.positionSliderAtSelected()},n.append=function(t){this.insert(t,this.cells.length)},n.prepend=function(t){this.insert(t,0)},n.remove=function(t){let n=this.getCells(t);if(!n||!n.length)return;let i=this.cells.length-1;n.forEach((t=>{t.remove();let n=this.cells.indexOf(t);i=Math.min(n,i),e.removeFrom(this.cells,t)})),this.cellChange(i),this.positionSliderAtSelected()},n.cellSizeChange=function(t){let e=this.getCell(t);if(!e)return;e.getSize();let n=this.cells.indexOf(e);this.cellChange(n)},n.cellChange=function(t){let e=this.selectedElement;this._positionCells(t),this._updateWrapShiftCells(),this.setGallerySize();let n=this.getCell(e);n&&(this.selectedIndex=this.getCellSlideIndex(n)),this.selectedIndex=Math.min(this.slides.length-1,this.selectedIndex),this.emitEvent("cellChange",[t]),this.select(this.selectedIndex)},t}))},880:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(47)):(e.Flickity=e.Flickity||{},e.Flickity.animatePrototype=i(e.fizzyUIUtils))}("undefined"!=typeof window?window:this,(function(t){return{startAnimation:function(){this.isAnimating||(this.isAnimating=!0,this.restingFrames=0,this.animate())},animate:function(){this.applyDragForce(),this.applySelectedAttraction();let t=this.x;this.integratePhysics(),this.positionSlider(),this.settle(t),this.isAnimating&&requestAnimationFrame((()=>this.animate()))},positionSlider:function(){let e=this.x;this.isWrapping&&(e=t.modulo(e,this.slideableWidth)-this.slideableWidth,this.shiftWrapCells(e)),this.setTranslateX(e,this.isAnimating),this.dispatchScrollEvent()},setTranslateX:function(t,e){t+=this.cursorPosition,this.options.rightToLeft&&(t=-t);let n=this.getPositionValue(t);this.slider.style.transform=e?`translate3d(${n},0,0)`:`translateX(${n})`},dispatchScrollEvent:function(){let t=this.slides[0];if(!t)return;let e=-this.x-t.target,n=e/this.slidesWidth;this.dispatchEvent("scroll",null,[n,e])},positionSliderAtSelected:function(){this.cells.length&&(this.x=-this.selectedSlide.target,this.velocity=0,this.positionSlider())},getPositionValue:function(t){return this.options.percentPosition?.01*Math.round(t/this.size.innerWidth*1e4)+"%":Math.round(t)+"px"},settle:function(t){!this.isPointerDown&&Math.round(100*this.x)===Math.round(100*t)&&this.restingFrames++,this.restingFrames>2&&(this.isAnimating=!1,delete this.isFreeScrolling,this.positionSlider(),this.dispatchEvent("settle",null,[this.selectedIndex]))},shiftWrapCells:function(t){let e=this.cursorPosition+t;this._shiftCells(this.beforeShiftCells,e,-1);let n=this.size.innerWidth-(t+this.slideableWidth+this.cursorPosition);this._shiftCells(this.afterShiftCells,n,1)},_shiftCells:function(t,e,n){t.forEach((t=>{let i=e>0?n:0;this._wrapShiftCell(t,i),e-=t.size.outerWidth}))},_unshiftCells:function(t){t&&t.length&&t.forEach((t=>this._wrapShiftCell(t,0)))},_wrapShiftCell:function(t,e){this._renderCellPosition(t,t.x+this.slideableWidth*e)},integratePhysics:function(){this.x+=this.velocity,this.velocity*=this.getFrictionFactor()},applyForce:function(t){this.velocity+=t},getFrictionFactor:function(){return 1-this.options[this.isFreeScrolling?"freeScrollFriction":"friction"]},getRestingPosition:function(){return this.x+this.velocity/(1-this.getFrictionFactor())},applyDragForce:function(){if(!this.isDraggable||!this.isPointerDown)return;let t=this.dragX-this.x-this.velocity;this.applyForce(t)},applySelectedAttraction:function(){if(this.isDraggable&&this.isPointerDown||this.isFreeScrolling||!this.slides.length)return;let t=(-1*this.selectedSlide.target-this.x)*this.options.selectedAttraction;this.applyForce(t)}}}))},229:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(131)):(e.Flickity=e.Flickity||{},e.Flickity.Cell=i(e.getSize))}("undefined"!=typeof window?window:this,(function(t){const e="flickity-cell";function n(t){this.element=t,this.element.classList.add(e),this.x=0,this.unselect()}let i=n.prototype;return i.destroy=function(){this.unselect(),this.element.classList.remove(e),this.element.style.transform="",this.element.removeAttribute("aria-hidden")},i.getSize=function(){this.size=t(this.element)},i.select=function(){this.element.classList.add("is-selected"),this.element.removeAttribute("aria-hidden")},i.unselect=function(){this.element.classList.remove("is-selected"),this.element.setAttribute("aria-hidden","true")},i.remove=function(){this.element.remove()},n}))},680:function(t,e,n){!function(e,i){if(t.exports)t.exports=i(e,n(158),n(131),n(47),n(229),n(714),n(880));else{let t=e.Flickity;e.Flickity=i(e,e.EvEmitter,e.getSize,e.fizzyUIUtils,t.Cell,t.Slide,t.animatePrototype)}}("undefined"!=typeof window?window:this,(function(t,e,n,i,s,o,r){const{getComputedStyle:a,console:l}=t;let{jQuery:c}=t,d=0,h={};function A(t,e){let n=i.getQueryElement(t);if(n){if(this.element=n,this.element.flickityGUID){let t=h[this.element.flickityGUID];return t&&t.option(e),t}c&&(this.$element=c(this.element)),this.options={...this.constructor.defaults},this.option(e),this._create()}else l&&l.error(`Bad element for Flickity: ${n||t}`)}A.defaults={accessibility:!0,cellAlign:"center",freeScrollFriction:.075,friction:.28,namespaceJQueryEvents:!0,percentPosition:!0,resize:!0,selectedAttraction:.025,setGallerySize:!0},A.create={};let u=A.prototype;Object.assign(u,e.prototype),u._create=function(){let{resize:e,watchCSS:n,rightToLeft:i}=this.options,s=this.guid=++d;this.element.flickityGUID=s,h[s]=this,this.selectedIndex=0,this.restingFrames=0,this.x=0,this.velocity=0,this.beginMargin=i?"marginRight":"marginLeft",this.endMargin=i?"marginLeft":"marginRight",this.viewport=document.createElement("div"),this.viewport.className="flickity-viewport",this._createSlider(),this.focusableElems=[this.element],(e||n)&&t.addEventListener("resize",this);for(let t in this.options.on){let e=this.options.on[t];this.on(t,e)}for(let t in A.create)A.create[t].call(this);n?this.watchCSS():this.activate()},u.option=function(t){Object.assign(this.options,t)},u.activate=function(){if(this.isActive)return;this.isActive=!0,this.element.classList.add("flickity-enabled"),this.options.rightToLeft&&this.element.classList.add("flickity-rtl"),this.getSize();let t=this._filterFindCellElements(this.element.children);this.slider.append(...t),this.viewport.append(this.slider),this.element.append(this.viewport),this.reloadCells(),this.options.accessibility&&(this.element.tabIndex=0,this.element.addEventListener("keydown",this)),this.emitEvent("activate"),this.selectInitialIndex(),this.isInitActivated=!0,this.dispatchEvent("ready")},u._createSlider=function(){let t=document.createElement("div");t.className="flickity-slider",this.slider=t},u._filterFindCellElements=function(t){return i.filterFindElements(t,this.options.cellSelector)},u.reloadCells=function(){this.cells=this._makeCells(this.slider.children),this.positionCells(),this._updateWrapShiftCells(),this.setGallerySize()},u._makeCells=function(t){return this._filterFindCellElements(t).map((t=>new s(t)))},u.getLastCell=function(){return this.cells[this.cells.length-1]},u.getLastSlide=function(){return this.slides[this.slides.length-1]},u.positionCells=function(){this._sizeCells(this.cells),this._positionCells(0)},u._positionCells=function(t){t=t||0,this.maxCellHeight=t&&this.maxCellHeight||0;let e=0;if(t>0){let n=this.cells[t-1];e=n.x+n.size.outerWidth}this.cells.slice(t).forEach((t=>{t.x=e,this._renderCellPosition(t,e),e+=t.size.outerWidth,this.maxCellHeight=Math.max(t.size.outerHeight,this.maxCellHeight)})),this.slideableWidth=e,this.updateSlides(),this._containSlides(),this.slidesWidth=this.cells.length?this.getLastSlide().target-this.slides[0].target:0},u._renderCellPosition=function(t,e){let n=e*(this.options.rightToLeft?-1:1);this.options.percentPosition&&(n*=this.size.innerWidth/t.size.width);let i=this.getPositionValue(n);t.element.style.transform=`translateX( ${i} )`},u._sizeCells=function(t){t.forEach((t=>t.getSize()))},u.updateSlides=function(){if(this.slides=[],!this.cells.length)return;let{beginMargin:t,endMargin:e}=this,n=new o(t,e,this.cellAlign);this.slides.push(n);let i=this._getCanCellFit();this.cells.forEach(((s,r)=>{if(!n.cells.length)return void n.addCell(s);let a=n.outerWidth-n.firstMargin+(s.size.outerWidth-s.size[e]);i(r,a)||(n.updateTarget(),n=new o(t,e,this.cellAlign),this.slides.push(n)),n.addCell(s)})),n.updateTarget(),this.updateSelectedSlide()},u._getCanCellFit=function(){let{groupCells:t}=this.options;if(!t)return()=>!1;if("number"==typeof t){let e=parseInt(t,10);return t=>t%e!=0}let e=1,n="string"==typeof t&&t.match(/^(\d+)%$/);n&&(e=parseInt(n[1],10)/100);let i=(this.size.innerWidth+1)*e;return(t,e)=>e<=i},u._init=u.reposition=function(){this.positionCells(),this.positionSliderAtSelected()},u.getSize=function(){this.size=n(this.element),this.setCellAlign(),this.cursorPosition=this.size.innerWidth*this.cellAlign};let p={left:0,center:.5,right:1};u.setCellAlign=function(){let{cellAlign:t,rightToLeft:e}=this.options,n=p[t];this.cellAlign=void 0!==n?n:t,e&&(this.cellAlign=1-this.cellAlign)},u.setGallerySize=function(){if(!this.options.setGallerySize)return;let t=this.options.adaptiveHeight&&this.selectedSlide?this.selectedSlide.height:this.maxCellHeight;this.viewport.style.height=`${t}px`},u._updateWrapShiftCells=function(){if(this.isWrapping=this.getIsWrapping(),!this.isWrapping)return;this._unshiftCells(this.beforeShiftCells),this._unshiftCells(this.afterShiftCells);let t=this.cursorPosition,e=this.cells.length-1;this.beforeShiftCells=this._getGapCells(t,e,-1);let n=this.size.innerWidth-this.cursorPosition;this.afterShiftCells=this._getGapCells(n,0,1)},u.getIsWrapping=function(){let{wrapAround:t}=this.options;if(!t||this.slides.length<2)return!1;if("fill"!==t)return!0;let e=this.slideableWidth-this.size.innerWidth;if(e>this.size.innerWidth)return!0;for(let t of this.cells)if(t.size.outerWidth>e)return!1;return!0},u._getGapCells=function(t,e,n){let i=[];for(;t>0;){let s=this.cells[e];if(!s)break;i.push(s),e+=n,t-=s.size.outerWidth}return i},u._containSlides=function(){if(!this.options.contain||this.isWrapping||!this.cells.length)return;let t=this.slideableWidth-this.getLastCell().size[this.endMargin];if(t<this.size.innerWidth)this.slides.forEach((e=>{e.target=t*this.cellAlign}));else{let e=this.cursorPosition+this.cells[0].size[this.beginMargin],n=t-this.size.innerWidth*(1-this.cellAlign);this.slides.forEach((t=>{t.target=Math.max(t.target,e),t.target=Math.min(t.target,n)}))}},u.dispatchEvent=function(t,e,n){let i=e?[e].concat(n):n;if(this.emitEvent(t,i),c&&this.$element){let i=t+=this.options.namespaceJQueryEvents?".flickity":"";if(e){let n=new c.Event(e);n.type=t,i=n}this.$element.trigger(i,n)}};const g=["dragStart","dragMove","dragEnd","pointerDown","pointerMove","pointerEnd","staticClick"];let f=u.emitEvent;u.emitEvent=function(t,e){if("staticClick"===t){let t=this.getParentCell(e[0].target),n=t&&t.element,i=t&&this.cells.indexOf(t);e=e.concat(n,i)}if(f.call(this,t,e),!g.includes(t)||!c||!this.$element)return;t+=this.options.namespaceJQueryEvents?".flickity":"";let n=e.shift(0),i=new c.Event(n);i.type=t,this.$element.trigger(i,e)},u.select=function(t,e,n){if(!this.isActive)return;if(t=parseInt(t,10),this._wrapSelect(t),(this.isWrapping||e)&&(t=i.modulo(t,this.slides.length)),!this.slides[t])return;let s=this.selectedIndex;this.selectedIndex=t,this.updateSelectedSlide(),n?this.positionSliderAtSelected():this.startAnimation(),this.options.adaptiveHeight&&this.setGallerySize(),this.dispatchEvent("select",null,[t]),t!==s&&this.dispatchEvent("change",null,[t])},u._wrapSelect=function(t){if(!this.isWrapping)return;const{selectedIndex:e,slideableWidth:n,slides:{length:s}}=this;if(!this.isDragSelect){let n=i.modulo(t,s),o=Math.abs(n-e),r=Math.abs(n+s-e),a=Math.abs(n-s-e);r<o?t+=s:a<o&&(t-=s)}t<0?this.x-=n:t>=s&&(this.x+=n)},u.previous=function(t,e){this.select(this.selectedIndex-1,t,e)},u.next=function(t,e){this.select(this.selectedIndex+1,t,e)},u.updateSelectedSlide=function(){let t=this.slides[this.selectedIndex];t&&(this.unselectSelectedSlide(),this.selectedSlide=t,t.select(),this.selectedCells=t.cells,this.selectedElements=t.getCellElements(),this.selectedCell=t.cells[0],this.selectedElement=this.selectedElements[0])},u.unselectSelectedSlide=function(){this.selectedSlide&&this.selectedSlide.unselect()},u.selectInitialIndex=function(){let t=this.options.initialIndex;if(this.isInitActivated)return void this.select(this.selectedIndex,!1,!0);if(t&&"string"==typeof t&&this.queryCell(t))return void this.selectCell(t,!1,!0);let e=0;t&&this.slides[t]&&(e=t),this.select(e,!1,!0)},u.selectCell=function(t,e,n){let i=this.queryCell(t);if(!i)return;let s=this.getCellSlideIndex(i);this.select(s,e,n)},u.getCellSlideIndex=function(t){let e=this.slides.find((e=>e.cells.includes(t)));return this.slides.indexOf(e)},u.getCell=function(t){for(let e of this.cells)if(e.element===t)return e},u.getCells=function(t){return(t=i.makeArray(t)).map((t=>this.getCell(t))).filter(Boolean)},u.getCellElements=function(){return this.cells.map((t=>t.element))},u.getParentCell=function(t){let e=this.getCell(t);if(e)return e;let n=t.closest(".flickity-slider > *");return this.getCell(n)},u.getAdjacentCellElements=function(t,e){if(!t)return this.selectedSlide.getCellElements();e=void 0===e?this.selectedIndex:e;let n=this.slides.length;if(1+2*t>=n)return this.getCellElements();let s=[];for(let o=e-t;o<=e+t;o++){let t=this.isWrapping?i.modulo(o,n):o,e=this.slides[t];e&&(s=s.concat(e.getCellElements()))}return s},u.queryCell=function(t){return"number"==typeof t?this.cells[t]:("string"==typeof t&&!t.match(/^[#.]?[\d/]/)&&(t=this.element.querySelector(t)),this.getCell(t))},u.uiChange=function(){this.emitEvent("uiChange")},u.onresize=function(){this.watchCSS(),this.resize()},i.debounceMethod(A,"onresize",150),u.resize=function(){if(!this.isActive||this.isAnimating||this.isDragging)return;this.getSize(),this.isWrapping&&(this.x=i.modulo(this.x,this.slideableWidth)),this.positionCells(),this._updateWrapShiftCells(),this.setGallerySize(),this.emitEvent("resize");let t=this.selectedElements&&this.selectedElements[0];this.selectCell(t,!1,!0)},u.watchCSS=function(){this.options.watchCSS&&(a(this.element,":after").content.includes("flickity")?this.activate():this.deactivate())},u.onkeydown=function(t){let{activeElement:e}=document,n=A.keyboardHandlers[t.key];this.options.accessibility&&e&&n&&this.focusableElems.some((t=>e===t))&&n.call(this)},A.keyboardHandlers={ArrowLeft:function(){this.uiChange(),this[this.options.rightToLeft?"next":"previous"]()},ArrowRight:function(){this.uiChange(),this[this.options.rightToLeft?"previous":"next"]()}},u.focus=function(){this.element.focus({preventScroll:!0})},u.deactivate=function(){this.isActive&&(this.element.classList.remove("flickity-enabled"),this.element.classList.remove("flickity-rtl"),this.unselectSelectedSlide(),this.cells.forEach((t=>t.destroy())),this.viewport.remove(),this.element.append(...this.slider.children),this.options.accessibility&&(this.element.removeAttribute("tabIndex"),this.element.removeEventListener("keydown",this)),this.isActive=!1,this.emitEvent("deactivate"))},u.destroy=function(){this.deactivate(),t.removeEventListener("resize",this),this.allOff(),this.emitEvent("destroy"),c&&this.$element&&c.removeData(this.element,"flickity"),delete this.element.flickityGUID,delete h[this.guid]},Object.assign(u,r),A.data=function(t){if(t=i.getQueryElement(t))return h[t.flickityGUID]},i.htmlInit(A,"flickity");let{jQueryBridget:m}=t;return c&&m&&m("flickity",A,c),A.setJQuery=function(t){c=t},A.Cell=s,A.Slide=o,A}))},690:function(t,e,n){!function(e,i){t.exports?t.exports=i(e,n(680),n(842),n(47)):e.Flickity=i(e,e.Flickity,e.Unidragger,e.fizzyUIUtils)}("undefined"!=typeof window?window:this,(function(t,e,n,i){Object.assign(e.defaults,{draggable:">1",dragThreshold:3});let s=e.prototype;function o(){return{x:t.pageXOffset,y:t.pageYOffset}}return Object.assign(s,n.prototype),s.touchActionValue="",e.create.drag=function(){this.on("activate",this.onActivateDrag),this.on("uiChange",this._uiChangeDrag),this.on("deactivate",this.onDeactivateDrag),this.on("cellChange",this.updateDraggable),this.on("pointerDown",this.handlePointerDown),this.on("pointerUp",this.handlePointerUp),this.on("pointerDown",this.handlePointerDone),this.on("dragStart",this.handleDragStart),this.on("dragMove",this.handleDragMove),this.on("dragEnd",this.handleDragEnd),this.on("staticClick",this.handleStaticClick)},s.onActivateDrag=function(){this.handles=[this.viewport],this.bindHandles(),this.updateDraggable()},s.onDeactivateDrag=function(){this.unbindHandles(),this.element.classList.remove("is-draggable")},s.updateDraggable=function(){">1"===this.options.draggable?this.isDraggable=this.slides.length>1:this.isDraggable=this.options.draggable,this.element.classList.toggle("is-draggable",this.isDraggable)},s._uiChangeDrag=function(){delete this.isFreeScrolling},s.handlePointerDown=function(e){if(!this.isDraggable)return void this.bindActivePointerEvents(e);let n="touchstart"===e.type,i="touch"===e.pointerType,s=e.target.matches("input, textarea, select");n||i||s||e.preventDefault(),s||this.focus(),document.activeElement!==this.element&&document.activeElement.blur(),this.dragX=this.x,this.viewport.classList.add("is-pointer-down"),this.pointerDownScroll=o(),t.addEventListener("scroll",this),this.bindActivePointerEvents(e)},s.hasDragStarted=function(t){return Math.abs(t.x)>this.options.dragThreshold},s.handlePointerUp=function(){delete this.isTouchScrolling,this.viewport.classList.remove("is-pointer-down")},s.handlePointerDone=function(){t.removeEventListener("scroll",this),delete this.pointerDownScroll},s.handleDragStart=function(){this.isDraggable&&(this.dragStartPosition=this.x,this.startAnimation(),t.removeEventListener("scroll",this))},s.handleDragMove=function(t,e,n){if(!this.isDraggable)return;t.preventDefault(),this.previousDragX=this.dragX;let i=this.options.rightToLeft?-1:1;this.isWrapping&&(n.x%=this.slideableWidth);let s=this.dragStartPosition+n.x*i;if(!this.isWrapping){let t=Math.max(-this.slides[0].target,this.dragStartPosition);s=s>t?.5*(s+t):s;let e=Math.min(-this.getLastSlide().target,this.dragStartPosition);s=s<e?.5*(s+e):s}this.dragX=s,this.dragMoveTime=new Date},s.handleDragEnd=function(){if(!this.isDraggable)return;let{freeScroll:t}=this.options;t&&(this.isFreeScrolling=!0);let e=this.dragEndRestingSelect();if(t&&!this.isWrapping){let t=this.getRestingPosition();this.isFreeScrolling=-t>this.slides[0].target&&-t<this.getLastSlide().target}else t||e!==this.selectedIndex||(e+=this.dragEndBoostSelect());delete this.previousDragX,this.isDragSelect=this.isWrapping,this.select(e),delete this.isDragSelect},s.dragEndRestingSelect=function(){let t=this.getRestingPosition(),e=Math.abs(this.getSlideDistance(-t,this.selectedIndex)),n=this._getClosestResting(t,e,1),i=this._getClosestResting(t,e,-1);return n.distance<i.distance?n.index:i.index},s._getClosestResting=function(t,e,n){let i=this.selectedIndex,s=1/0,o=this.options.contain&&!this.isWrapping?(t,e)=>t<=e:(t,e)=>t<e;for(;o(e,s)&&(i+=n,s=e,null!==(e=this.getSlideDistance(-t,i)));)e=Math.abs(e);return{distance:s,index:i-n}},s.getSlideDistance=function(t,e){let n=this.slides.length,s=this.options.wrapAround&&n>1,o=s?i.modulo(e,n):e,r=this.slides[o];if(!r)return null;let a=s?this.slideableWidth*Math.floor(e/n):0;return t-(r.target+a)},s.dragEndBoostSelect=function(){if(void 0===this.previousDragX||!this.dragMoveTime||new Date-this.dragMoveTime>100)return 0;let t=this.getSlideDistance(-this.dragX,this.selectedIndex),e=this.previousDragX-this.dragX;return t>0&&e>0?1:t<0&&e<0?-1:0},s.onscroll=function(){let t=o(),e=this.pointerDownScroll.x-t.x,n=this.pointerDownScroll.y-t.y;(Math.abs(e)>3||Math.abs(n)>3)&&this.pointerDone()},e}))},835:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(680),n(564)):i(e.Flickity,e.imagesLoaded)}("undefined"!=typeof window?window:this,(function(t,e){return t.create.imagesLoaded=function(){this.on("activate",this.imagesLoaded)},t.prototype.imagesLoaded=function(){this.options.imagesLoaded&&e(this.slider).on("progress",((t,e)=>{let n=this.getParentCell(e.img);this.cellSizeChange(n&&n.element),this.options.freeScroll||this.positionSliderAtSelected()}))},t}))},442:(t,e,n)=>{if(t.exports){const e=n(680);n(690),n(410),n(573),n(516),n(597),n(227),n(835),t.exports=e}},227:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(680),n(47)):i(e.Flickity,e.fizzyUIUtils)}("undefined"!=typeof window?window:this,(function(t,e){const n="data-flickity-lazyload",i=`${n}-src`,s=`${n}-srcset`,o=`img[${n}], img[${i}], img[${s}], source[${s}]`;t.create.lazyLoad=function(){this.on("select",this.lazyLoad),this.handleLazyLoadComplete=this.onLazyLoadComplete.bind(this)};let r=t.prototype;function a(t){if(t.matches("img")){let e=t.getAttribute(n),o=t.getAttribute(i),r=t.getAttribute(s);if(e||o||r)return t}return[...t.querySelectorAll(o)]}function l(t,e){this.img=t,this.onComplete=e,this.load()}return r.lazyLoad=function(){let{lazyLoad:t}=this.options;if(!t)return;let e="number"==typeof t?t:0;this.getAdjacentCellElements(e).map(a).flat().forEach((t=>new l(t,this.handleLazyLoadComplete)))},r.onLazyLoadComplete=function(t,e){let n=this.getParentCell(t),i=n&&n.element;this.cellSizeChange(i),this.dispatchEvent("lazyLoad",e,i)},l.prototype.handleEvent=e.handleEvent,l.prototype.load=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this);let t=this.img.getAttribute(n)||this.img.getAttribute(i),e=this.img.getAttribute(s);this.img.src=t,e&&this.img.setAttribute("srcset",e),this.img.removeAttribute(n),this.img.removeAttribute(i),this.img.removeAttribute(s)},l.prototype.onload=function(t){this.complete(t,"flickity-lazyloaded")},l.prototype.onerror=function(t){this.complete(t,"flickity-lazyerror")},l.prototype.complete=function(t,e){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this),(this.img.parentNode.matches("picture")?this.img.parentNode:this.img).classList.add(e),this.onComplete(this.img,t)},t.LazyLoader=l,t}))},573:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(680),n(47)):i(e.Flickity,e.fizzyUIUtils)}("undefined"!=typeof window?window:this,(function(t,e){function n(){this.holder=document.createElement("div"),this.holder.className="flickity-page-dots",this.dots=[]}n.prototype.setDots=function(t){let e=t-this.dots.length;e>0?this.addDots(e):e<0&&this.removeDots(-e)},n.prototype.addDots=function(t){let e=new Array(t).fill().map(((t,e)=>{let n=document.createElement("button");n.setAttribute("type","button");let i=e+1+this.dots.length;return n.className="flickity-page-dot",n.textContent=`View slide ${i}`,n}));this.holder.append(...e),this.dots=this.dots.concat(e)},n.prototype.removeDots=function(t){this.dots.splice(this.dots.length-t,t).forEach((t=>t.remove()))},n.prototype.updateSelected=function(t){this.selectedDot&&(this.selectedDot.classList.remove("is-selected"),this.selectedDot.removeAttribute("aria-current")),this.dots.length&&(this.selectedDot=this.dots[t],this.selectedDot.classList.add("is-selected"),this.selectedDot.setAttribute("aria-current","step"))},t.PageDots=n,Object.assign(t.defaults,{pageDots:!0}),t.create.pageDots=function(){this.options.pageDots&&(this.pageDots=new n,this.handlePageDotsClick=this.onPageDotsClick.bind(this),this.on("activate",this.activatePageDots),this.on("select",this.updateSelectedPageDots),this.on("cellChange",this.updatePageDots),this.on("resize",this.updatePageDots),this.on("deactivate",this.deactivatePageDots))};let i=t.prototype;return i.activatePageDots=function(){this.pageDots.setDots(this.slides.length),this.focusableElems.push(...this.pageDots.dots),this.pageDots.holder.addEventListener("click",this.handlePageDotsClick),this.element.append(this.pageDots.holder)},i.onPageDotsClick=function(t){let e=this.pageDots.dots.indexOf(t.target);-1!==e&&(this.uiChange(),this.select(e))},i.updateSelectedPageDots=function(){this.pageDots.updateSelected(this.selectedIndex)},i.updatePageDots=function(){this.pageDots.dots.forEach((t=>{e.removeFrom(this.focusableElems,t)})),this.pageDots.setDots(this.slides.length),this.focusableElems.push(...this.pageDots.dots)},i.deactivatePageDots=function(){this.pageDots.holder.remove(),this.pageDots.holder.removeEventListener("click",this.handlePageDotsClick)},t.PageDots=n,t}))},516:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(680)):i(e.Flickity)}("undefined"!=typeof window?window:this,(function(t){function e(t,e){this.autoPlay=t,this.onTick=e,this.state="stopped",this.onVisibilityChange=this.visibilityChange.bind(this),this.onVisibilityPlay=this.visibilityPlay.bind(this)}e.prototype.play=function(){"playing"!==this.state&&(document.hidden?document.addEventListener("visibilitychange",this.onVisibilityPlay):(this.state="playing",document.addEventListener("visibilitychange",this.onVisibilityChange),this.tick()))},e.prototype.tick=function(){if("playing"!==this.state)return;let t="number"==typeof this.autoPlay?this.autoPlay:3e3;this.clear(),this.timeout=setTimeout((()=>{this.onTick(),this.tick()}),t)},e.prototype.stop=function(){this.state="stopped",this.clear(),document.removeEventListener("visibilitychange",this.onVisibilityChange)},e.prototype.clear=function(){clearTimeout(this.timeout)},e.prototype.pause=function(){"playing"===this.state&&(this.state="paused",this.clear())},e.prototype.unpause=function(){"paused"===this.state&&this.play()},e.prototype.visibilityChange=function(){this[document.hidden?"pause":"unpause"]()},e.prototype.visibilityPlay=function(){this.play(),document.removeEventListener("visibilitychange",this.onVisibilityPlay)},Object.assign(t.defaults,{pauseAutoPlayOnHover:!0}),t.create.player=function(){this.player=new e(this.options.autoPlay,(()=>{this.next(!0)})),this.on("activate",this.activatePlayer),this.on("uiChange",this.stopPlayer),this.on("pointerDown",this.stopPlayer),this.on("deactivate",this.deactivatePlayer)};let n=t.prototype;return n.activatePlayer=function(){this.options.autoPlay&&(this.player.play(),this.element.addEventListener("mouseenter",this))},n.playPlayer=function(){this.player.play()},n.stopPlayer=function(){this.player.stop()},n.pausePlayer=function(){this.player.pause()},n.unpausePlayer=function(){this.player.unpause()},n.deactivatePlayer=function(){this.player.stop(),this.element.removeEventListener("mouseenter",this)},n.onmouseenter=function(){this.options.pauseAutoPlayOnHover&&(this.player.pause(),this.element.addEventListener("mouseleave",this))},n.onmouseleave=function(){this.player.unpause(),this.element.removeEventListener("mouseleave",this)},t.Player=e,t}))},410:function(t,e,n){!function(e,i){t.exports?t.exports=i(n(680)):i(e.Flickity)}("undefined"!=typeof window?window:this,(function(t){const e="http://www.w3.org/2000/svg";function n(t,e,n){this.increment=t,this.direction=e,this.isPrevious="previous"===t,this.isLeft="left"===e,this._create(n)}n.prototype._create=function(t){let e=this.element=document.createElement("button");e.className=`flickity-button flickity-prev-next-button ${this.increment}`;let n=this.isPrevious?"Previous":"Next";e.setAttribute("type","button"),e.setAttribute("aria-label",n),this.disable();let i=this.createSVG(n,t);e.append(i)},n.prototype.createSVG=function(t,n){let i=document.createElementNS(e,"svg");i.setAttribute("class","flickity-button-icon"),i.setAttribute("viewBox","0 0 100 100");let s=document.createElementNS(e,"title");s.append(t);let o=document.createElementNS(e,"path"),r=function(t){if("string"==typeof t)return t;let{x0:e,x1:n,x2:i,x3:s,y1:o,y2:r}=t;return`M ${e}, 50\n    L ${n}, ${o+50}\n    L ${i}, ${r+50}\n    L ${s}, 50\n    L ${i}, ${50-r}\n    L ${n}, ${50-o}\n    Z`}(n);return o.setAttribute("d",r),o.setAttribute("class","arrow"),this.isLeft||o.setAttribute("transform","translate(100, 100) rotate(180)"),i.append(s,o),i},n.prototype.enable=function(){this.element.removeAttribute("disabled")},n.prototype.disable=function(){this.element.setAttribute("disabled",!0)},Object.assign(t.defaults,{prevNextButtons:!0,arrowShape:{x0:10,x1:60,y1:50,x2:70,y2:40,x3:30}}),t.create.prevNextButtons=function(){if(!this.options.prevNextButtons)return;let{rightToLeft:t,arrowShape:e}=this.options,i=t?"right":"left",s=t?"left":"right";this.prevButton=new n("previous",i,e),this.nextButton=new n("next",s,e),this.focusableElems.push(this.prevButton.element),this.focusableElems.push(this.nextButton.element),this.handlePrevButtonClick=()=>{this.uiChange(),this.previous()},this.handleNextButtonClick=()=>{this.uiChange(),this.next()},this.on("activate",this.activatePrevNextButtons),this.on("select",this.updatePrevNextButtons)};let i=t.prototype;return i.updatePrevNextButtons=function(){let t=this.slides.length?this.slides.length-1:0;this.updatePrevNextButton(this.prevButton,0),this.updatePrevNextButton(this.nextButton,t)},i.updatePrevNextButton=function(t,e){if(this.isWrapping&&this.slides.length>1)return void t.enable();let n=this.selectedIndex!==e;t[n?"enable":"disable"](),!n&&document.activeElement===t.element&&this.focus()},i.activatePrevNextButtons=function(){this.prevButton.element.addEventListener("click",this.handlePrevButtonClick),this.nextButton.element.addEventListener("click",this.handleNextButtonClick),this.element.append(this.prevButton.element,this.nextButton.element),this.on("deactivate",this.deactivatePrevNextButtons)},i.deactivatePrevNextButtons=function(){this.prevButton.element.remove(),this.nextButton.element.remove(),this.prevButton.element.removeEventListener("click",this.handlePrevButtonClick),this.nextButton.element.removeEventListener("click",this.handleNextButtonClick),this.off("deactivate",this.deactivatePrevNextButtons)},t.PrevNextButton=n,t}))},714:function(t){!function(e,n){t.exports?t.exports=n():(e.Flickity=e.Flickity||{},e.Flickity.Slide=n())}("undefined"!=typeof window?window:this,(function(){function t(t,e,n){this.beginMargin=t,this.endMargin=e,this.cellAlign=n,this.cells=[],this.outerWidth=0,this.height=0}let e=t.prototype;return e.addCell=function(t){this.cells.push(t),this.outerWidth+=t.size.outerWidth,this.height=Math.max(t.size.outerHeight,this.height),1===this.cells.length&&(this.x=t.x,this.firstMargin=t.size[this.beginMargin])},e.updateTarget=function(){let t=this.getLastCell(),e=t?t.size[this.endMargin]:0,n=this.outerWidth-(this.firstMargin+e);this.target=this.x+this.firstMargin+n*this.cellAlign},e.getLastCell=function(){return this.cells[this.cells.length-1]},e.select=function(){this.cells.forEach((t=>t.select()))},e.unselect=function(){this.cells.forEach((t=>t.unselect()))},e.getCellElements=function(){return this.cells.map((t=>t.element))},t}))},131:t=>{!function(e,n){t.exports?t.exports=n():e.getSize=n()}(window,(function(){function t(t){let e=parseFloat(t);return-1==t.indexOf("%")&&!isNaN(e)&&e}let e=["paddingLeft","paddingRight","paddingTop","paddingBottom","marginLeft","marginRight","marginTop","marginBottom","borderLeftWidth","borderRightWidth","borderTopWidth","borderBottomWidth"];return e.length,function(n){if("string"==typeof n&&(n=document.querySelector(n)),!n||"object"!=typeof n||!n.nodeType)return;let i=getComputedStyle(n);if("none"==i.display)return function(){let t={width:0,height:0,innerWidth:0,innerHeight:0,outerWidth:0,outerHeight:0};return e.forEach((e=>{t[e]=0})),t}();let s={};s.width=n.offsetWidth,s.height=n.offsetHeight;let o=s.isBorderBox="border-box"==i.boxSizing;e.forEach((t=>{let e=i[t],n=parseFloat(e);s[t]=isNaN(n)?0:n}));let r=s.paddingLeft+s.paddingRight,a=s.paddingTop+s.paddingBottom,l=s.marginLeft+s.marginRight,c=s.marginTop+s.marginBottom,d=s.borderLeftWidth+s.borderRightWidth,h=s.borderTopWidth+s.borderBottomWidth,A=t(i.width);!1!==A&&(s.width=A+(o?0:r+d));let u=t(i.height);return!1!==u&&(s.height=u+(o?0:a+h)),s.innerWidth=s.width-(r+d),s.innerHeight=s.height-(a+h),s.outerWidth=s.width+l,s.outerHeight=s.height+c,s}}))},564:function(t,e,n){!function(e,i){t.exports?t.exports=i(e,n(158)):e.imagesLoaded=i(e,e.EvEmitter)}("undefined"!=typeof window?window:this,(function(t,e){let n=t.jQuery,i=t.console;function s(t,e,o){if(!(this instanceof s))return new s(t,e,o);let r=t;var a;"string"==typeof t&&(r=document.querySelectorAll(t)),r?(this.elements=(a=r,Array.isArray(a)?a:"object"==typeof a&&"number"==typeof a.length?[...a]:[a]),this.options={},"function"==typeof e?o=e:Object.assign(this.options,e),o&&this.on("always",o),this.getImages(),n&&(this.jqDeferred=new n.Deferred),setTimeout(this.check.bind(this))):i.error(`Bad element for imagesLoaded ${r||t}`)}s.prototype=Object.create(e.prototype),s.prototype.getImages=function(){this.images=[],this.elements.forEach(this.addElementImages,this)};const o=[1,9,11];s.prototype.addElementImages=function(t){"IMG"===t.nodeName&&this.addImage(t),!0===this.options.background&&this.addElementBackgroundImages(t);let{nodeType:e}=t;if(!e||!o.includes(e))return;let n=t.querySelectorAll("img");for(let t of n)this.addImage(t);if("string"==typeof this.options.background){let e=t.querySelectorAll(this.options.background);for(let t of e)this.addElementBackgroundImages(t)}};const r=/url\((['"])?(.*?)\1\)/gi;function a(t){this.img=t}function l(t,e){this.url=t,this.element=e,this.img=new Image}return s.prototype.addElementBackgroundImages=function(t){let e=getComputedStyle(t);if(!e)return;let n=r.exec(e.backgroundImage);for(;null!==n;){let i=n&&n[2];i&&this.addBackground(i,t),n=r.exec(e.backgroundImage)}},s.prototype.addImage=function(t){let e=new a(t);this.images.push(e)},s.prototype.addBackground=function(t,e){let n=new l(t,e);this.images.push(n)},s.prototype.check=function(){if(this.progressedCount=0,this.hasAnyBroken=!1,!this.images.length)return void this.complete();let t=(t,e,n)=>{setTimeout((()=>{this.progress(t,e,n)}))};this.images.forEach((function(e){e.once("progress",t),e.check()}))},s.prototype.progress=function(t,e,n){this.progressedCount++,this.hasAnyBroken=this.hasAnyBroken||!t.isLoaded,this.emitEvent("progress",[this,t,e]),this.jqDeferred&&this.jqDeferred.notify&&this.jqDeferred.notify(this,t),this.progressedCount===this.images.length&&this.complete(),this.options.debug&&i&&i.log(`progress: ${n}`,t,e)},s.prototype.complete=function(){let t=this.hasAnyBroken?"fail":"done";if(this.isComplete=!0,this.emitEvent(t,[this]),this.emitEvent("always",[this]),this.jqDeferred){let t=this.hasAnyBroken?"reject":"resolve";this.jqDeferred[t](this)}},a.prototype=Object.create(e.prototype),a.prototype.check=function(){this.getIsImageComplete()?this.confirm(0!==this.img.naturalWidth,"naturalWidth"):(this.proxyImage=new Image,this.img.crossOrigin&&(this.proxyImage.crossOrigin=this.img.crossOrigin),this.proxyImage.addEventListener("load",this),this.proxyImage.addEventListener("error",this),this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.proxyImage.src=this.img.currentSrc||this.img.src)},a.prototype.getIsImageComplete=function(){return this.img.complete&&this.img.naturalWidth},a.prototype.confirm=function(t,e){this.isLoaded=t;let{parentNode:n}=this.img,i="PICTURE"===n.nodeName?n:this.img;this.emitEvent("progress",[this,i,e])},a.prototype.handleEvent=function(t){let e="on"+t.type;this[e]&&this[e](t)},a.prototype.onload=function(){this.confirm(!0,"onload"),this.unbindEvents()},a.prototype.onerror=function(){this.confirm(!1,"onerror"),this.unbindEvents()},a.prototype.unbindEvents=function(){this.proxyImage.removeEventListener("load",this),this.proxyImage.removeEventListener("error",this),this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},l.prototype=Object.create(a.prototype),l.prototype.check=function(){this.img.addEventListener("load",this),this.img.addEventListener("error",this),this.img.src=this.url,this.getIsImageComplete()&&(this.confirm(0!==this.img.naturalWidth,"naturalWidth"),this.unbindEvents())},l.prototype.unbindEvents=function(){this.img.removeEventListener("load",this),this.img.removeEventListener("error",this)},l.prototype.confirm=function(t,e){this.isLoaded=t,this.emitEvent("progress",[this,this.element,e])},s.makeJQueryPlugin=function(e){(e=e||t.jQuery)&&(n=e,n.fn.imagesLoaded=function(t,e){return new s(this,t,e).jqDeferred.promise(n(this))})},s.makeJQueryPlugin(),s}))},379:t=>{"use strict";var e=[];function n(t){for(var n=-1,i=0;i<e.length;i++)if(e[i].identifier===t){n=i;break}return n}function i(t,i){for(var o={},r=[],a=0;a<t.length;a++){var l=t[a],c=i.base?l[0]+i.base:l[0],d=o[c]||0,h="".concat(c," ").concat(d);o[c]=d+1;var A=n(h),u={css:l[1],media:l[2],sourceMap:l[3],supports:l[4],layer:l[5]};if(-1!==A)e[A].references++,e[A].updater(u);else{var p=s(u,i);i.byIndex=a,e.splice(a,0,{identifier:h,updater:p,references:1})}r.push(h)}return r}function s(t,e){var n=e.domAPI(e);return n.update(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap&&e.supports===t.supports&&e.layer===t.layer)return;n.update(t=e)}else n.remove()}}t.exports=function(t,s){var o=i(t=t||[],s=s||{});return function(t){t=t||[];for(var r=0;r<o.length;r++){var a=n(o[r]);e[a].references--}for(var l=i(t,s),c=0;c<o.length;c++){var d=n(o[c]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}o=l}}},569:t=>{"use strict";var e={};t.exports=function(t,n){var i=function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(t){n=null}e[t]=n}return e[t]}(t);if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(n)}},216:t=>{"use strict";t.exports=function(t){var e=document.createElement("style");return t.setAttributes(e,t.attributes),t.insert(e,t.options),e}},565:(t,e,n)=>{"use strict";t.exports=function(t){var e=n.nc;e&&t.setAttribute("nonce",e)}},795:t=>{"use strict";t.exports=function(t){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=t.insertStyleElement(t);return{update:function(n){!function(t,e,n){var i="";n.supports&&(i+="@supports (".concat(n.supports,") {")),n.media&&(i+="@media ".concat(n.media," {"));var s=void 0!==n.layer;s&&(i+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),i+=n.css,s&&(i+="}"),n.media&&(i+="}"),n.supports&&(i+="}");var o=n.sourceMap;o&&"undefined"!=typeof btoa&&(i+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(i,t,e.options)}(e,t,n)},remove:function(){!function(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t)}(e)}}}},589:t=>{"use strict";t.exports=function(t,e){if(e.styleSheet)e.styleSheet.cssText=t;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(t))}}},842:function(t,e,n){!function(e,i){t.exports?t.exports=i(e,n(158)):e.Unidragger=i(e,e.EvEmitter)}("undefined"!=typeof window?window:this,(function(t,e){function n(){}let i,s,o=n.prototype=Object.create(e.prototype);o.handleEvent=function(t){let e="on"+t.type;this[e]&&this[e](t)},"ontouchstart"in t?(i="touchstart",s=["touchmove","touchend","touchcancel"]):t.PointerEvent?(i="pointerdown",s=["pointermove","pointerup","pointercancel"]):(i="mousedown",s=["mousemove","mouseup"]),o.touchActionValue="none",o.bindHandles=function(){this._bindHandles("addEventListener",this.touchActionValue)},o.unbindHandles=function(){this._bindHandles("removeEventListener","")},o._bindHandles=function(e,n){this.handles.forEach((s=>{s[e](i,this),s[e]("click",this),t.PointerEvent&&(s.style.touchAction=n)}))},o.bindActivePointerEvents=function(){s.forEach((e=>{t.addEventListener(e,this)}))},o.unbindActivePointerEvents=function(){s.forEach((e=>{t.removeEventListener(e,this)}))},o.withPointer=function(t,e){e.pointerId===this.pointerIdentifier&&this[t](e,e)},o.withTouch=function(t,e){let n;for(let t of e.changedTouches)t.identifier===this.pointerIdentifier&&(n=t);n&&this[t](e,n)},o.onmousedown=function(t){this.pointerDown(t,t)},o.ontouchstart=function(t){this.pointerDown(t,t.changedTouches[0])},o.onpointerdown=function(t){this.pointerDown(t,t)};const r=["TEXTAREA","INPUT","SELECT","OPTION"],a=["radio","checkbox","button","submit","image","file"];return o.pointerDown=function(t,e){let n=r.includes(t.target.nodeName),i=a.includes(t.target.type),s=!n||i;!this.isPointerDown&&!t.button&&s&&(this.isPointerDown=!0,this.pointerIdentifier=void 0!==e.pointerId?e.pointerId:e.identifier,this.pointerDownPointer={pageX:e.pageX,pageY:e.pageY},this.bindActivePointerEvents(),this.emitEvent("pointerDown",[t,e]))},o.onmousemove=function(t){this.pointerMove(t,t)},o.onpointermove=function(t){this.withPointer("pointerMove",t)},o.ontouchmove=function(t){this.withTouch("pointerMove",t)},o.pointerMove=function(t,e){let n={x:e.pageX-this.pointerDownPointer.pageX,y:e.pageY-this.pointerDownPointer.pageY};this.emitEvent("pointerMove",[t,e,n]),!this.isDragging&&this.hasDragStarted(n)&&this.dragStart(t,e),this.isDragging&&this.dragMove(t,e,n)},o.hasDragStarted=function(t){return Math.abs(t.x)>3||Math.abs(t.y)>3},o.dragStart=function(t,e){this.isDragging=!0,this.isPreventingClicks=!0,this.emitEvent("dragStart",[t,e])},o.dragMove=function(t,e,n){this.emitEvent("dragMove",[t,e,n])},o.onmouseup=function(t){this.pointerUp(t,t)},o.onpointerup=function(t){this.withPointer("pointerUp",t)},o.ontouchend=function(t){this.withTouch("pointerUp",t)},o.pointerUp=function(t,e){this.pointerDone(),this.emitEvent("pointerUp",[t,e]),this.isDragging?this.dragEnd(t,e):this.staticClick(t,e)},o.dragEnd=function(t,e){this.isDragging=!1,setTimeout((()=>delete this.isPreventingClicks)),this.emitEvent("dragEnd",[t,e])},o.pointerDone=function(){this.isPointerDown=!1,delete this.pointerIdentifier,this.unbindActivePointerEvents(),this.emitEvent("pointerDone")},o.onpointercancel=function(t){this.withPointer("pointerCancel",t)},o.ontouchcancel=function(t){this.withTouch("pointerCancel",t)},o.pointerCancel=function(t,e){this.pointerDone(),this.emitEvent("pointerCancel",[t,e])},o.onclick=function(t){this.isPreventingClicks&&t.preventDefault()},o.staticClick=function(t,e){let n="mouseup"===t.type;n&&this.isIgnoringMouseUp||(this.emitEvent("staticClick",[t,e]),n&&(this.isIgnoringMouseUp=!0,setTimeout((()=>{delete this.isIgnoringMouseUp}),400)))},n}))}},e={};function n(i){var s=e[i];if(void 0!==s)return s.exports;var o=e[i]={id:i,exports:{}};return t[i].call(o.exports,o,o.exports,n),o.exports}n.n=t=>{var e=t&&t.__esModule?()=>t.default:()=>t;return n.d(e,{a:e}),e},n.d=(t,e)=>{for(var i in e)n.o(e,i)&&!n.o(t,i)&&Object.defineProperty(t,i,{enumerable:!0,get:e[i]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=(t,e)=>Object.prototype.hasOwnProperty.call(t,e),(()=>{var t;n.g.importScripts&&(t=n.g.location+"");var e=n.g.document;if(!t&&e&&(e.currentScript&&(t=e.currentScript.src),!t)){var i=e.getElementsByTagName("script");if(i.length)for(var s=i.length-1;s>-1&&!t;)t=i[s--].src}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=t})(),n.nc=void 0,(()=>{"use strict";var t=n(379),e=n.n(t),i=n(795),s=n.n(i),o=n(569),r=n.n(o),a=n(565),l=n.n(a),c=n(216),d=n.n(c),h=n(589),A=n.n(h),u=n(426),p={};p.styleTagTransform=A(),p.setAttributes=l(),p.insert=r().bind(null,"head"),p.domAPI=s(),p.insertStyleElement=d(),e()(u.Z,p),u.Z&&u.Z.locals&&u.Z.locals;const g=n.p+"a29157975671a9b3b25a.jpg",f=document.createElement("div");f.classList.add("homeContainer","tab"),f.dataset.activeTab=!0,f.dataset.label="Home";let m=document.createElement("h1");m.classList.add("greetingHeader"),m.innerHTML="Welcome",f.appendChild(m);let C=document.createElement("p");C.classList.add("greetingContent"),C.innerHTML="OH SEY NAMI: Culinary artistry, impeccable cuisine, and unforgettable elegance await—indulge in exceptional dining, relish every moment.",f.appendChild(C),document.addEventListener("DOMContentLoaded",(()=>{const t=document.querySelector(".centerContainer");t.style.width="clamp(300px, 50%, 500px)",t.style.height="clamp(300px, 50%, 500px)"}));const v=n.p+"50474acf1eb643911be3.jpg",y=n.p+"8f4073716fbf63a1a8c3.jpg",b=n.p+"2649733a2711e02e1bba.jpg",B=n.p+"1af735b65ab60dd45777.jpeg";var x=n(442),E=n.n(x),I=n(212),k={};function w(t){return new(E())(t,{cellAlign:"center",contain:!1,wrapAround:!0,autoPlay:!1,prevNextButtons:!1,pageDots:!1,initialIndex:2})}k.styleTagTransform=A(),k.setAttributes=l(),k.insert=r().bind(null,"head"),k.domAPI=s(),k.insertStyleElement=d(),e()(I.Z,k),I.Z&&I.Z.locals&&I.Z.locals;let L=document.createElement("div");L.classList.add("imageCarousel","entreesCarousel");let S=document.createElement("div");S.classList.add("carouselWrapper");let D=document.createElement("div");D.classList.add("carouselItem");let z=new Image;z.classList.add("dishImage"),z.src=v,D.appendChild(z);let W=document.createElement("p");W.classList.add("itemDescription"),W.innerHTML="Braised Pork Belly",D.appendChild(W),S.appendChild(D);let P=document.createElement("dvi");P.classList.add("carouselItem");let T=new Image;T.classList.add("dishImage"),T.src=y,P.appendChild(T);let M=document.createElement("p");M.classList.add("itemDescription"),M.innerHTML="Wok-Fried Whole Crab",P.appendChild(M),S.appendChild(P);let H=document.createElement("div");H.classList.add("carouselItem");let j=new Image;j.classList.add("dishImage"),j.src=b,H.appendChild(j);let N=document.createElement("p");N.classList.add("itemDescription"),N.innerHTML="Iberico Pork",H.appendChild(N),S.appendChild(H);let Q=document.createElement("div");Q.classList.add("carouselItem");let F=new Image;F.classList.add("dishImage"),F.src=B,Q.appendChild(F);let _=document.createElement("p");_.classList.add("itemDescription"),_.innerHTML="Peking Duck",Q.appendChild(_),S.appendChild(Q),L.appendChild(S);let U=document.createElement("button");U.classList.add("leftButton"),U.dataset.carouselButton="left",U.innerHTML="&lt;",L.appendChild(U);let O,Y=document.createElement("button");function q(){O&&O.destroy();const t=w(S);O=t}Y.classList.add("rightButton"),Y.dataset.carouselButton="right",Y.innerHTML="&gt;",L.appendChild(Y),U.addEventListener("click",(()=>{O.previous()})),Y.addEventListener("click",(()=>{O.next()}));const $=n.p+"9a4a113b4368909c4915.jpg",Z=n.p+"4f42ba231e9ed4f8e3d7.jpg",X=n.p+"58d39b7be9a242035ba4.jpg",R=n.p+"c9a9232ea6edcbc98a9a.jpg",V=document.createElement("div");V.classList.add("imageCarousel","drinksCarousel");let G=document.createElement("div");G.classList.add("carouselWrapper");let J=document.createElement("div");J.classList.add("carouselItem");let K=new Image;K.classList.add("dishImage"),K.src=$,J.appendChild(K);let tt=document.createElement("p");tt.classList.add("itemDescription"),tt.innerHTML="Negroni",J.appendChild(tt),G.appendChild(J);let et=document.createElement("div");et.classList.add("carouselItem");let nt=new Image;nt.classList.add("dishImage"),nt.src=Z,et.appendChild(nt);let it=document.createElement("p");it.classList.add("itemDescription"),it.innerHTML="Mojito",et.appendChild(it),G.appendChild(et);let st=document.createElement("div");st.classList.add("carouselItem");let ot=new Image;ot.classList.add("dishImage"),ot.src=X,st.appendChild(ot);let rt=document.createElement("p");rt.classList.add("itemDescription"),rt.innerHTML="Kyoto Sour",st.appendChild(rt),G.appendChild(st);let at=document.createElement("div");at.classList.add("carouselItem");let lt=new Image;lt.classList.add("dishImage"),lt.src=R,at.appendChild(lt);let ct=document.createElement("p");ct.classList.add("itemDescription"),ct.innerHTML="Bamboo Cocktail",at.appendChild(ct),G.appendChild(at),V.appendChild(G);let dt=document.createElement("button");dt.classList.add("leftButton"),dt.dataset.carouselButton="left",dt.innerHTML="&lt;",V.appendChild(dt);let ht,At=document.createElement("button");At.classList.add("rightButton"),At.dataset.carouselButton="right",At.innerHTML="&gt;",V.appendChild(At),dt.addEventListener("click",(()=>{ht.previous()})),At.addEventListener("click",(()=>{ht.next()}));const ut=document.createElement("div");ut.classList.add("menuHandler","tab"),ut.dataset.activeTab=!1,ut.dataset.label="Menu";let pt=document.createElement("span");pt.classList.add("menuName"),pt.innerHTML="Menu",ut.appendChild(pt);let gt=document.createElement("div");gt.classList.add("menuButtonContainer"),ut.appendChild(gt);let ft=document.createElement("button");ft.classList.add("entreeButton"),ft.setAttribute("data-menu-button",""),ft.innerHTML="Entrees",gt.appendChild(ft);let mt=document.createElement("button");function Ct(){L.dataset.activeCarousel=!0,q(),"true"===V.dataset.activeCarousel&&delete V.dataset.activeCarousel}mt.classList.add("drinksButton"),mt.setAttribute("data-menu-button",""),mt.innerHTML="Drinks",gt.appendChild(mt),ut.appendChild(L),ut.appendChild(V),ft.addEventListener("click",(()=>{L.dataset.activeCarousel||(L.dataset.activeCarousel=!0,delete V.dataset.activeCarousel,ht.destroy(),q())})),mt.addEventListener("click",(()=>{V.dataset.activeCarousel||(V.dataset.activeCarousel=!0,delete L.dataset.activeCarousel,O.destroy(),function(){ht&&ht.destroy();const t=w(G);ht=t}())}));const vt=document.createElement("div");vt.classList.add("contactHandler","tab"),vt.dataset.activeTab=!1,vt.dataset.label="Contact";let yt=document.createElement("span");yt.classList.add("contactTitle"),yt.innerHTML="Contact Us",vt.appendChild(yt);let bt=document.createElement("div");bt.classList.add("contactInfo"),bt.innerHTML="<strong>Sakura Palace</strong><p>123 Moonlight Avenue<br>Celestial District<br>Galaxy XYZ-8888<br>Contact: info@sakurapalace.com<p>",vt.appendChild(bt);let Bt=document.createElement("div");Bt.classList.add("contactInfo"),Bt.innerHTML="<strong>Executive Chef:</strong><p>Hiroshi Tanaka<br>Email: chef.hiroshi@sakurapalace.com<p>",vt.appendChild(Bt);let xt=document.createElement("div");xt.classList.add("contactInfo"),xt.innerHTML="<strong>Restaurant Manager:</strong><p>Ayumi Nakamura<br>Email: manager.ayumi@sakurapalace.com<p>",vt.appendChild(xt);let Et=document.createElement("div");Et.classList.add("contactInfo"),Et.innerHTML="<strong>Reservations Manager:</strong><p>Takeshi Suzuki<br>Email: reservations.takeshi@sakurapalace.com<p>",vt.appendChild(Et);let It=document.createElement("div");It.classList.add("contactInfo"),It.innerHTML="<strong>Marketing Contact:</strong><p>Yumi Kim<br>Email: marketing.yumi@sakurapalace.com<p>",vt.appendChild(It);const kt=document.createElement("div");kt.classList.add("aboutHandler","tab"),kt.dataset.activeTab=!1,kt.dataset.label="About";let wt=document.createElement("span");wt.classList.add("aboutTitle"),wt.innerHTML='About <span class="restaurantNameAbout">Oh Sey Nami</span>',kt.appendChild(wt);let Lt=document.createElement("div");Lt.classList.add("aboutDescription"),Lt.innerHTML='<p>\nWelcome to <span class="restaurantNameAbout">Oh Sey Nami</span>, a high-end Asian restaurant nestled on the enigmatic planet of Zorblax. In the Era of the Lunar Moons, our culinary journey began in the heart of the cosmos. Our mission is to cater to interstellar travelers and cosmopolitan gourmands who seek an extraordinary dining experience beyond the stars.\n<br><br>\nHistory meets innovation as we embrace the cosmic wonders of Zorblax, offering a fusion of authentic Asian flavors and celestial ingredients. From our floating sushi bar to our asteroid-grown herbs, each dish is a testament to our unwavering commitment to gastronomic excellence.\n<br><br>\nJoin us for an unforgettable voyage through flavors as we explore the boundless universe of tastes. At <span class="restaurantNameAbout">Oh Sey Nami</span>, the sky is not the limit – it\'s just the beginning.\n</p>',kt.appendChild(Lt);const St=document.createElement("div");St.classList.add("creditsHandler","tab"),St.dataset.activeTab=!1,St.dataset.label="Credits";let Dt=document.createElement("span");Dt.classList.add("contactTitle"),Dt.innerHTML="Credits",St.appendChild(Dt);const zt=document.createElement("div");zt.classList.add("creditsContainer"),[{name:"Background Image, Iberico Pork, Peking Duck",source:"https://www.venetianlasvegas.com/restaurants/mott-32.html"},{name:"Wok-Fried Whole Crab",source:"https://www.marinabaysands.com/restaurants/mott32.html"},{name:"Braised Pork Belly",source:"https://www.fourseasons.com/beijing/dining/restaurants/cai_yi_xuan/"},{name:"Mojito",source:"https://www.maltwhisky.de/mojito/"},{name:"Kyoto Sour",source:"https://www.liquor.com/recipes/kyoto-sour/"},{name:"Bamboo Cocktail",source:"https://imbibemagazine.com/recipe/bamboo-cocktail/"},{name:"Negroni",source:"https://www.negroni.co/pages/negroni"}].forEach(((t,e)=>{const n=document.createElement("div");n.classList.add("credit");const i=document.createElement("p");i.classList.add("creatorName"),i.textContent=`${t.name}`;const s=document.createElement("p");s.classList.add("sourceWebsite"),s.innerHTML=`Source: <a href="${t.source}" target="_blank">${t.source}</a>`,n.appendChild(i),n.appendChild(s),zt.appendChild(n)})),St.appendChild(zt);const Wt=document.createElement("div");Wt.classList.add("main-content");const Pt=new Image;Pt.src=g,Pt.classList.add("homeImage"),Wt.appendChild(Pt);let Tt=document.createElement("div");Tt.classList.add("centerContainer"),Tt.appendChild(f),Tt.appendChild(ut),Tt.appendChild(vt),Tt.appendChild(kt),Tt.appendChild(St),Wt.appendChild(Tt);const Mt=n.p+"6b84de62dcc2d70494c2.jpg",Ht=document.createElementNS("http://www.w3.org/2000/svg","svg");Ht.setAttribute("xmlns","http://www.w3.org/2000/svg"),Ht.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),Ht.setAttribute("width","24"),Ht.setAttribute("height","24"),Ht.setAttribute("viewBox","0 0 24 24"),Ht.innerHTML='\n<path d="M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z" />\n';const jt=document.createElement("nav");jt.classList.add("header");const Nt=new Image;Nt.src=Mt,Nt.id="navLogo",jt.appendChild(Nt);let Qt=document.createElement("div");Qt.classList.add("infoButtons"),jt.appendChild(Qt);let Ft=document.createElement("h1");Ft.classList.add("restaurantName"),Ft.innerHTML="Oh Sey Nami",Qt.appendChild(Ft);let _t=document.createElement("ul");_t.classList.add("nav-menu"),Qt.appendChild(_t);let Ut=Ht;function Ot(t){t.preventDefault();const e=document.querySelector(".nav-menu");window.innerWidth<=768&&e.classList.remove("active")}Ut.classList.add("menuSvg"),Qt.appendChild(Ut),Ut.addEventListener("click",(()=>{_t.classList.toggle("active")}));let Yt=!0;function qt(t){t.preventDefault();let e=document.querySelectorAll(".tab");const n=document.querySelector(".centerContainer");let i=null;e.forEach((t=>{let e=t.getAttribute("data-label");if(this.innerHTML===e){if("true"===t.dataset.activeTab)return;"Menu"===e&&(i=!0,t.setAttribute("data-active-tab","true"),n.style.width="",n.style.height=""),"Menu"!=e&&function(){if("true"===V.dataset.activeCarousel)delete V.dataset.activeCarousel;else{if("true"!==L.dataset.activeCarousel)return;delete L.dataset.activeCarousel}}(),"Home"===e?(t.setAttribute("data-active-tab","true"),Yt=!0,n.style.width="clamp(300px, 50%, 500px)",n.style.height="clamp(300px, 50%, 500px)"):"About"!==e&&"Contact"!==e&&"Credits"!==e||(t.setAttribute("data-active-tab","true"),Yt=!1,n.style.width="",n.style.height="")}else t.setAttribute("data-active-tab","false")})),i&&(Yt?setTimeout((()=>{Ct()}),501):Ct())}[{label:"Home",href:"#"},{label:"Menu",href:"#"},{label:"Contact",href:"#"},{label:"About",href:"#"},{label:"Credits",href:"#"}].forEach((t=>{let e=document.createElement("li"),n=document.createElement("a");n.dataset.activeNavButton="false",n.innerHTML=t.label,n.href=t.href,n.addEventListener("click",qt),n.addEventListener("click",Ot),e.appendChild(n),_t.appendChild(e)}));const $t=n.p+"550985caaa8859d4b95f.svg",Zt=document.createElement("footer");Zt.classList.add("footer");let Xt=document.createElement("div");Xt.classList.add("creatorContainer");let Rt=document.createElement("div");Rt.classList.add("creatorText"),Rt.innerHTML="Created by: Swift928",Xt.appendChild(Rt);let Vt=new Image;Vt.src=$t,Vt.classList.add("githubSVG"),Xt.appendChild(Vt),Zt.appendChild(Xt);const Gt=new Image;Gt.src=Mt,Gt.id="navLogo",Zt.appendChild(Gt);let Jt=document.createElement("div");Jt.classList.add("rightsText"),Jt.innerHTML="2023 - Oh Sey Nami",Zt.appendChild(Jt),document.body.appendChild(function(){const t=document.createElement("content");return t.appendChild(jt),t.appendChild(Wt),t.appendChild(Zt),t}())})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,